# Generated by Django 3.0.7 on 2021-06-01 16:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import lab.models
import shortuuidfield.fields
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patient', '0001_initial'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, null=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Lab Technicians',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departments', models.CharField(blank=True, choices=[('Chemistry', 'Chemistry'), ('Hematology', 'Hematology'), ('Microbiology', 'Microbiology'), ('Transfusion Services', 'Transfusion Services'), ('Immunology', 'Immunology'), ('Cytology', 'Cytology'), ('Coagulation', 'Coagulation'), ('Urinalysis', 'Urinalysis'), ('Surgical Pathology', 'Surgical Pathology')], max_length=100, null=True)),
                ('location', models.CharField(max_length=200)),
                ('slug', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True)),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LabTechnician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, null=True)),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Lab Technicians',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('Blood', 'Blood'), ('Serum', 'Serum'), ('Sweat', 'Sweat'), ('Oral fluid', 'Oral fluid'), ('Saliva', 'Saliva'), ('Urine', 'Urine'), ('Amniotic fluid', 'Amniotic fluid'), ('Bone marrow', 'Bone marrow'), ('Cerebrospinal fluid (CSF)', 'Cerebrospinal fluid (CSF)'), ('Tissue biopsy', 'Tissue biopsy'), ('Stool', 'Stool'), ('Sputum', 'Sputum'), ('Semen', 'Semen'), ('Virology swab', 'Virology swab'), ('Plasma', 'Plasma')], max_length=100, null=True)),
                ('name', models.CharField(max_length=200)),
                ('source', models.CharField(max_length=200)),
                ('slug', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('collected_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, null=True)),
                ('image1', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=100, size=[500, 300], upload_to=lab.models.sample_image_directory_path)),
                ('image2', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=100, size=[500, 300], upload_to=lab.models.sample_image_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(blank=True, choices=[('Complete Blood Count', 'Complete Blood Count'), ('Prothrombin Time', 'Prothrombin Time'), ('Basic Metabolic Panel', 'Basic Metabolic Panel'), ('Comprehensive Metabolic Panel', 'Comprehensive Metabolic Panel'), ('Lipid Panel', 'Lipid Panel'), ('Liver Panel', 'Liver Panel'), ('Thyroid Stimulating Hormone', 'Thyroid Stimulating Hormone'), ('Hemoglobin A1C', 'Hemoglobin A1C'), ('Urinalysis', 'Urinalysis'), ('Culture', 'Culture'), ('Thyroid Profile III', 'Thyroid Profile III'), ('Activated Partial Thromboplastin Time', 'Activated Partial Thromboplastin Time'), ('Lipid Profile', 'Lipid Profile')], max_length=100, null=True)),
                ('code', models.CharField(help_text='Example: CBC, BMB', max_length=80)),
                ('status', models.CharField(blank=True, choices=[('Routine', 'Routine'), ('STAT', 'STAT')], max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('queries', models.TextField(blank=True, help_text='Information about the person and blood sample. Any pertinent information regarding the patientâ€™s test preparation or the condition of specimen may be noted here.', null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('upper_bound', models.IntegerField(blank=True, null=True)),
                ('lower_bound', models.IntegerField(blank=True, null=True)),
                ('charges', models.IntegerField(blank=True, help_text='in dollars', null=True)),
                ('duration', models.FloatField(blank=True, help_text='in minutes', null=True)),
                ('unit', models.CharField(blank=True, choices=[('Grams (g)', 'Grams (g)'), ('Grams per deciliter (g/dL)', 'Grams per deciliter (g/dL)'), ('Grams per liter (g/L)', 'Grams per liter (g/L)'), ('International units per liter (IU/L)', 'International units per liter (IU/L)'), ('International units per milliliter (IU/mL)', 'International units per milliliter (IU/mL)'), ('Micrograms (mcg)', 'Micrograms (mcg)'), ('Micrograms per deciliter (mcg/dL)', 'Micrograms per deciliter (mcg/dL)'), ('Micrograms per liter (mcg/L)', 'Micrograms per liter (mcg/L)'), ('Microkatals per liter (mckat/L)', 'Microkatals per liter (mckat/L)'), ('Microliters (mcL)', 'Microliters (mcL)'), ('Micromoles per liter (mcmol/L)', 'Micromoles per liter (mcmol/L)'), ('Milliequivalents (mEq)', 'Milliequivalents (mEq)'), ('Milliequivalents per liter (mEq/L)', 'Milliequivalents per liter (mEq/L)'), ('Milligrams (mg)', 'Milligrams (mg)'), ('Milligrams per deciliter (mg/dL)', 'Milligrams per deciliter (mg/dL)'), ('Milligrams per liter (mg/L)', 'Milligrams per liter (mg/L)'), ('Milli-international units per liter (mIU/L)', 'Milli-international units per liter (mIU/L)'), ('Milliliters (mL)', 'Milliliters (mL)'), ('Millimeters (mm)', 'Millimeters (mm)'), ('Millimeters of mercury (mm Hg)', 'Millimeters of mercury (mm Hg)'), ('Millimoles (mmol)', 'Millimoles (mmol)'), ('Millimoles per liter (mmol/L)', 'Millimoles per liter (mmol/L)'), ('Milliosmoles per kilogram of water (mOsm/kg water)', 'Milliosmoles per kilogram of water (mOsm/kg water)'), ('Milliunits per gram (mU/g)', 'Milliunits per gram (mU/g)'), ('Milliunits per liter (mU/L)', 'Milliunits per liter (mU/L)'), ('Nanograms per deciliter (ng/dL)', 'Nanograms per deciliter (ng/dL)'), ('Nanograms per liter (ng/L)', 'Nanograms per liter (ng/L)'), ('Nanograms per milliliter (ng/mL)', 'Nanograms per milliliter (ng/mL)'), ('Nanograms per milliliter per hour (ng/mL/hr)', 'Nanograms per milliliter per hour (ng/mL/hr)'), ('Nanomoles (nmol)', 'Nanomoles (nmol)'), ('Nanomoles per liter (nmol/L)', 'Nanomoles per liter (nmol/L)'), ('Picograms (pg)', 'Picograms (pg)'), ('Picograms per milliliter (pg/mL)', 'Picograms per milliliter (pg/mL)'), ('Picomoles per liter (pmol/L)', 'Picomoles per liter (pmol/L)'), ('Units per liter (U/L)', 'Units per liter (U/L)'), ('Units per milliliter (U/mL)', 'Units per milliliter (U/mL)'), ('Titers', 'Titers')], max_length=100, null=True)),
                ('slug', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True)),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.Doctor')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.Laboratory')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.Patient')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.Sample')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.LabTechnician')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('generated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('Blood', 'Blood'), ('Serum', 'Serum'), ('Sweat', 'Sweat'), ('Oral fluid', 'Oral fluid'), ('Saliva', 'Saliva'), ('Urine', 'Urine'), ('Amniotic fluid', 'Amniotic fluid'), ('Bone marrow', 'Bone marrow'), ('Cerebrospinal fluid (CSF)', 'Cerebrospinal fluid (CSF)'), ('Tissue biopsy', 'Tissue biopsy'), ('Stool', 'Stool'), ('Sputum', 'Sputum'), ('Semen', 'Semen'), ('Virology swab', 'Virology swab'), ('Plasma', 'Plasma')], max_length=100, null=True)),
                ('slug', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('uuid', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, null=True)),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.Test')),
            ],
        ),
    ]
